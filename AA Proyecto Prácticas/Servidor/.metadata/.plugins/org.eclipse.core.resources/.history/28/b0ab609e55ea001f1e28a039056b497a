package com.gasolinera.controllers;

import com.gasolinera.clases.Suministro;
import com.gasolinera.clases.Tanque;
import com.gasolinera.repository.SuministroRepository;
import com.gasolinera.repository.TanqueRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

@RestController
@RequestMapping("/suministros")
public class SuministroController {

    @Autowired
    private SuministroRepository suministroRepository;

    @Autowired
    private TanqueRepository tanqueRepository;

    // Obtener todos los suministros
    @GetMapping
    public List<Suministro> getAllSuministros() {
        return suministroRepository.findAll();
    }

    // Crear un nuevo suministro (venta de combustible)
    @PostMapping
    public ResponseEntity<Suministro> createSuministro(@RequestBody Suministro suministro) {
        Tanque tanque = tanqueRepository.findByCombustible(suministro.getCombustible());

        if (tanque == null || tanque.getLitrosDisponibles() < suministro.getLitrosServidos()) {
            return ResponseEntity.badRequest().build(); // No hay suficiente combustible
        }

        // Calcular importe
        BigDecimal importe = suministro.getCombustible().getPrecio().multiply(new BigDecimal(suministro.getLitrosServidos()));
        suministro.setImporte(importe);
        suministro.setFecha(LocalDateTime.now());

        // Actualizar tanque
        tanque.setLitrosDisponibles(tanque.getLitrosDisponibles() - suministro.getLitrosServidos());
        tanqueRepository.save(tanque);

        // Guardar suministro
        Suministro nuevoSuministro = suministroRepository.save(suministro);
        return ResponseEntity.ok(nuevoSuministro);
    }

    // Obtener reporte despuÃ©s de 25 suministros
    @GetMapping("/reporte")
    public ResponseEntity<List<Suministro>> getReporte() {
        List<Suministro> ultimos25 = suministroRepository.findTop25ByOrderByFechaDesc();
        return ResponseEntity.ok(ultimos25);
    }
}
